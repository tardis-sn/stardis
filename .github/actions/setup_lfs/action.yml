name: "Setup LFS"
description: "Sets up Git LFS, retrieves LFS cache and fails if cache is not available"

inputs:
  regression-data-repo:
    description: "Repository containing regression data (format: owner/repo)"
    required: false
    default: "stardis-sn/stardis-regression-data"

runs:
  using: "composite"
  steps:
    - name: Clone stardis-sn/stardis-regression-data
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.regression-data-repo }}
        path: stardis-regression-data
        lfs: false

    - name: Create LFS file list
      run: |
        git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-files-list
      working-directory: stardis-regression-data
      shell: bash
    
    - name: Restore LFS cache
      uses: actions/cache/restore@v4
      id: lfs-cache-regression-data
      with:
        path: stardis-regression-data/.git/lfs
        key: stardis-regression-full-data-${{ hashFiles('stardis-regression-data/.lfs-files-list') }}-${{ inputs.regression-data-repo }}-v1
        fail-on-cache-miss: true

    - name: Git LFS Checkout
      if: steps.lfs-cache-regression-data.outputs.cache-hit == 'true'
      run: git lfs checkout
      working-directory: stardis-regression-data
      shell: bash
