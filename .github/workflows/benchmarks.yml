name: benchmarks


on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
    types:
      - opened
      - reopened
      - synchronize
      - labeled # benchmarks label required
  workflow_dispatch:

env: 
  DEPLOY_BRANCH: main
  TARDIS_VER: release-2024.08.25 # master 

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}


jobs:
  test-cache:
    uses: ./.github/workflows/lfs-cache.yml
    with:
      regression-data-repo: tardis-sn/tardis-regression-data
      allow_lfs_pull: ${{ github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'git-lfs-pull') }}

  build:
    if: github.event_name == 'push' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' &&
      contains(github.event.pull_request.labels.*.name, 'benchmarks'))
    runs-on: ubuntu-latest
    needs: [test-cache]
    steps:
      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request'
        with:
          fetch-depth: 0

      - name: Checkout pull/${{ github.event.number }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
        if: github.event_name == 'pull_request'
      
      - name: Fetch master branch
        run: git fetch origin main:main
        if: github.event_name == 'pull_request'

      - name: Restore Atom Data
        uses: actions/cache/restore@v4
        id: atom-data-restore
        with:
          path: benchmarks/kurucz_cd23_chianti_H_He.h5
          key: atom-data

      - name: Download Atom Data
        if: steps.atom-data-restore.outputs.cache-hit != 'true'
        run: |
          REPO_URL="https://github.com/tardis-sn/tardis-regression-data"
          wget -q "$REPO_URL/raw/main/atom_data/kurucz_cd23_chianti_H_He.h5" -O benchmarks/kurucz_cd23_chianti_H_He.h5

      - name: Save Atom Data
        uses: actions/cache/save@v4
        if: ${{ steps.atom-data-restore.outputs.cache-hit != 'true'  && always() || false }}
        id: atom-data-cache-save
        with:
          path: benchmarks/kurucz_cd23_chianti_H_He.h5
          key: atom-data

      - name: Setup Mamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: benchmark
          init-shell: >-
            bash
          create-args: >-
            python
            asv=0.6.4
            mamba
            libmambapy<2.0
            conda-build
            conda=24.11.0

      - name: Accept all asv questions
        run: asv machine --yes

      - name: Download TARDIS dependencies
        run: |
          LOCK_URL="https://github.com/tardis-sn/tardis/raw/${{ env.TARDIS_VER }}/tardis_env3.yml"
          wget -q "$LOCK_URL"

      - name: Add TARDIS install command to asv config file
        run: |
          TARDIS_INSTALL_CMD="pip install git+https://github.com/tardis-sn/tardis.git@${{ env.TARDIS_VER }}"
          cat <<< $(jq '.build_command |= [$TARDIS_INSTALL_CMD] + .' --arg TARDIS_INSTALL_CMD "${TARDIS_INSTALL_CMD}" asv.conf.json) > asv.conf.json

      - name: Run benchmarks for last 5 commits if not PR
        if: github.event_name != 'pull_request'
        run: |
          git log -n 5 --pretty=format:"%H" >> tag_commits.txt
          asv run -a --show-stderr rounds=1 HASHFILE:tag_commits.txt | tee asv-output.log
          if grep -q failed asv-output.log; then 
            echo "Some benchmarks have failed!"
            exit 1
          fi

      - name: Generate Graphs and HTML
        if: github.event_name != 'pull_request'
        run: asv publish

      - name: Delete env files
        if: github.event_name != 'pull_request'
        run: rm -r .asv/env #Delete env from prev run if not PR

      - name: Push results to dest repo
        if: github.event_name != 'pull_request'
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.BOT_TOKEN }}
          publish_branch: ${{ env.DEPLOY_BRANCH }}
          publish_dir: .asv/html
          keep_files: true
          external_repository: tardis-sn/stardis-benchmarks
          user_name: "TARDIS Bot"
          user_email: "tardis.sn.bot@gmail.com"

      - name: Run benchmarks for base and head commits of PR
        if: github.event_name == 'pull_request'
        run: |
          echo $(git rev-parse HEAD) > commit_hashes.txt
          echo $(git rev-parse main) >> commit_hashes.txt
          asv run -a  rounds=1  --show-stderr HASHFILE:commit_hashes.txt | tee asv-output-PR.log  
          if grep -q failed asv-output-PR.log; then 
            echo "Some benchmarks have failed!"
            exit 1
          fi

      - name: Compare Main and PR head
        run: asv compare origin/main HEAD --factor 1.1 --split --sort ratio | tee asv-compare-output.log

      - name: Compare Main and PR head but only show changed results
        run: asv compare origin/main HEAD --only-changed --factor 1.1 --split --sort ratio | tee asv-compare-changed-output.log

      - name: Benchmarks compare output
        id: asv_pr_vs_main
        uses: juliangruber/read-file-action@v1.0.0
        with:
          path: asv-compare-output.log

      - name: Benchmarks compare only changed output
        id: asv_pr_vs_main_changed
        uses: juliangruber/read-file-action@v1.0.0
        with:
          path: asv-compare-changed-output.log

      - name: Generate Graphs and HTML of PR
        if: github.event_name == 'pull_request'
        run: |
          asv publish

      - name: Delete env files of PR
        if: github.event_name == 'pull_request'
        run: rm -r .asv/env

      - name: Set destination directory
        if: github.event_name == 'pull_request'
        run: |
          BRANCH=$(echo ${GITHUB_REF#refs/heads/})
          if [[ $EVENT == push ]] || [[ $EVENT == workflow_dispatch ]]; then
            if [[ $BRANCH == $DEFAULT ]]; then
              echo "DEST_DIR=" >> $GITHUB_ENV
            else
              echo "DEST_DIR=branch/$BRANCH" >> $GITHUB_ENV
            fi
          elif [[ $EVENT == pull_request ]]; then
            echo "DEST_DIR=pull/$PR" >> $GITHUB_ENV
          else
            echo "Unexpected event trigger $EVENT"
            exit 1
          fi
          cat $GITHUB_ENV
        env:
          DEFAULT: ${{ github.event.repository.default_branch }}
          EVENT: ${{ github.event_name }}
          PR: ${{ github.event.number }}

      - name: Set clean branch option
        if: github.event_name == 'pull_request'
        run: |
          if [[ $EVENT == workflow_dispatch ]]; then
            echo "CLEAN_BRANCH=true" >> $GITHUB_ENV
          else
            echo "CLEAN_BRANCH=false" >> $GITHUB_ENV
          fi
          cat $GITHUB_ENV
        env:
          EVENT: ${{ github.event_name }}

      - name: Deploy ${{ env.DEST_DIR }}
        if: github.event_name == 'pull_request'
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.BOT_TOKEN }}
          publish_branch: ${{ env.DEPLOY_BRANCH }}
          publish_dir: .asv/html
          destination_dir: ${{ env.DEST_DIR }}
          keep_files: true
          force_orphan: ${{ env.CLEAN_BRANCH }}
          external_repository: tardis-sn/stardis-benchmarks
          user_name: "TARDIS Bot"
          user_email: "tardis.sn.bot@gmail.com"

      - name: Find Comment
        if: always() && github.event_name == 'pull_request'
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          comment-author: "tardis-bot"
          body-includes: I ran benchmarks as you asked

      - name: Post comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.BOT_TOKEN }}
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            *\*beep\* \*bop\**
            Hi human, 
            I ran benchmarks as you asked comparing main (${{ github.event.pull_request.base.sha }}) and the latest commit (${{ github.event.pull_request.head.sha }}). 
            Here are the logs produced by ASV.
            Results can also be downloaded as artifacts [**here**](${{ env.URL }}). 

            Significantly changed benchmarks:
            <details>

              ```diff
              ${{ steps.asv_pr_vs_main_changed.outputs.content }}
              ```

            </details>

            All benchmarks:
            <details>

              ```diff
              ${{ steps.asv_pr_vs_main.outputs.content }}
              ```
              
            </details>

            If you want to see the graph of the results, you can check it [**here**](${{ env.URL_PAGES }})
        env:
          URL: https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/runs/${{ github.run_id }}?check_suite_focus=true
          URL_PAGES: https://tardis-sn.github.io/stardis-benchmarks/pull/${{ github.event.number }}

      - name: Save results artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: asv-benchmark-results-${{ runner.os }}
          path: |
            .asv/results
            asv-compare-output.log
            asv-compare-changed-output.log
